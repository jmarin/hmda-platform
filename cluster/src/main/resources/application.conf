akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  loglevel = ${?HMDA_LOGLEVEL}
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    provider = cluster
  }

  remote {
    log-remote-lifecycle-events = error
    artery {
      enabled = on
      canonical {
        hostname = ${clustering.ip}
        port = ${clustering.port}
      }
    }
  }

  cluster {
    roles = [persistence, validation, query, publication, health, api]
    failure-detector.threshold = 12 //Increase value for AWS environments
    metrics.enabled = off

    retry-unsuccessful-join-after = 20s

    auto-down-unreachable-after = off

    http {
      management {
        hostname = "127.0.0.1"
        port = 9999
      }
    }
  }

  extensions = [
    "akka.cluster.pubsub.DistributedPubSub"
  ]


  discovery {
    method = akka-dns
  }

  management {
    http {
      port = 19999
    }
    cluster.bootstrap {
      required-contact-point-nr = 1
      contact-point-discovery {
        service-name = ""
        service-namespace = "localhost"
      }
      contact-point {
        fallback-port = 19999
        no-seeds-stable-margin = 5 seconds
      }
    }
  }

}

hmda {
  runtime-mode = "dev"
  runtime-mode = ${?HMDA_RUNTIME_MODE}
  clusterStatusSchedulerStartupDelay = 500
  clusterStatusSchedulerInterval = 5
}

clustering {
  name = "hmda"
  name = ${?HMDA_CLUSTER_NAME}
  ip = "127.0.0.1"
  ip = ${?HMDA_CLUSTER_IP}
  port = 2551
  port = ${?APP_PORT}
}


